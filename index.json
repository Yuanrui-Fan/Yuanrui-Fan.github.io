[{"authors":["admin"],"categories":null,"content":"I am is currently a PhD student supervised by Prof. Shanping Li in the College of Computer Science and Technology, Zhejiang University, China. I am also supervised by Dr. Xin Xia. My research interests include mining software repositories, empirical software engineering and software analytics.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://github.com/Yuanrui-Fan/Yuanrui-Fan.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/Yuanrui-Fan/Yuanrui-Fan.github.io/authors/admin/","section":"authors","summary":"I am is currently a PhD student supervised by Prof. Shanping Li in the College of Computer Science and Technology, Zhejiang University, China. I am also supervised by Dr. Xin Xia. My research interests include mining software repositories, empirical software engineering and software analytics.","tags":null,"title":"Yuanrui Fan","type":"authors"},{"authors":["**Yuanrui Fan**","Xin Xia","David Lo","Shanping Li"],"categories":null,"content":"","date":1533600000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533600000,"objectID":"c9578431d1ec11a309d1c411fe4d1ef6","permalink":"https://github.com/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/tse2018/","publishdate":"2018-08-07T00:00:00Z","relpermalink":"/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/tse2018/","section":"publication","summary":"In this study, we propose an approach which can determine whether a newly submitted bug report is valid. Our approach first extracts 33 features from bug reports. The extracted features are grouped along 5 dimensions, i.e., reporter experience, collaboration network, completeness, readability and text. Based on these features, we use a random forest classifier to identify valid bug reports. To evaluate the effectiveness of our approach, we experiment on large-scale datasets containing a total of 560,697 bug reports from five open source projects (i.e., Eclipse, Netbeans, Mozilla, Firefox and Thunderbird). On average, across the five datasets, our approach achieves an F1-score for valid bug reports and F1-score for invalid ones of 0.74 and 0.67, respectively. Moreover, our approach achieves an average AUC of 0.81. In terms of AUC and F1-scores for valid and invalid bug reports, our approach statistically significantly outperforms two baselines using features that are proposed by Zanetti et al. [99]. We also study the most important features that distinguish valid bug reports from invalid ones. We find that the textual features of a bug report and reporterâ€™s experience are the most important factors to distinguish valid bug reports from invalid ones.","tags":null,"title":"Chaff from the Wheat: Characterizing and Determining Valid Bug Reports","type":"publication"},{"authors":["**Yuanrui Fan**","Xin Xia","David Lo","Shanping Li"],"categories":null,"content":"","date":1521417600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1521417600,"objectID":"94359b3ebdf9eccd3f69b7dc37e6cf7c","permalink":"https://github.com/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/emse2018/","publishdate":"2018-03-19T00:00:00Z","relpermalink":"/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/emse2018/","section":"publication","summary":"Modern Code Review (MCR) has been widely used by open source and proprietary software projects. Inspecting code changes consumes reviewers much time and effort since they need to comprehend patches, and many reviewers are often assigned to review many code changes. Note that a code change might be eventually abandoned, which causes waste of time and effort. Thus, a tool that predicts early on whether a code change will be merged can help developers prioritize changes to inspect, accomplish more things given tight schedule, and not waste reviewing effort on low quality changes. In this paper, motivated by the above needs, we build a merged code change prediction tool. Our approach first extracts 34 features from code changes, which are grouped into 5 dimensions: code, file history, owner experience, collaboration network, and text. And then we leverage machine learning techniques such as random forest to build a prediction model. To evaluate the performance of our approach, we conduct experiments on three open source projects (i.e., Eclipse, LibreOffice, and OpenStack), containing a total of 166,215 code changes. Across three datasets, our approach statistically significantly improves random guess classifiers and two prediction models proposed by Jeong et al. (2009) and Gousios et al. (2014) in terms of several evaluation metrics. Besides, we also study the important features which distinguish merged code changes from abandoned ones.","tags":null,"title":"Early prediction of merged code changes to prioritize reviewing tasks","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"39ba6944ed62be5ebacdac95cd0b5e5b","permalink":"https://github.com/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/jos2019/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/jos2019/","section":"publication","summary":"","tags":null,"title":"","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ccd765a2c05cf5a46f2546d866a2031a","permalink":"https://github.com/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/tse2019/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/Yuanrui-Fan/Yuanrui-Fan.github.io/publication/tse2019/","section":"publication","summary":"","tags":null,"title":"","type":"publication"}]